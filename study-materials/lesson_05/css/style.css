/* Підключення фрифтів */

/* Google Fonts (Plugin) */
/* @import url("https://fonts.googleapis.com/css?family=Manrope:regular,500,600,700&display=swap"); */

/* Локальне підключення шрифтів */
@import url("fonts.css");

/* Скидання стилів */
@import url("reset.css");

/* Основні стилі */
body {
	font-family: "Gilroy", sans-serif;
	background-color: #333;
	color: #fff;
}

/* ======================================================== */
/* --------------- CSS-властивості блоків ----------------- */
/* ======================================================== */

.block {
	background-color: #77608d;
}
.inline {
	background-color: #7a956b;
}
.inline-block {
	background-color: #794f45;
}

/* ======================================================== */

/* Відступи */
/* Відступи неочікувано працюють для рядкових об'єктів */
/* Відступи прийнято задавати для батьківського об'єкту */

/*
padding - Внутрішній відступ. 
Відступи (відстань) ВСЕРЕДЕНІ об'єкту. 
Від кордонів об'єкту ДО ЙОГО КОНТЕНТУ
НЕ успадковується

Анатомія значення відступів:
- Цифрове значення + одиниця виміру (10px, 50%... і т.д.)
- Не може бути від'ємним
- При вказанні значення у відсотках
відсоток береться від ШИРИНИ батьківського об'єкту,
навіть для вертикальних відступів 

padding: з_усіх_сторін;
padding: зверху_знизу зправа_зліва;
padding: зверху зправа_зліва знизу;
padding: зверху зправа знизу зліва;
(годинникова стрілка)

padding-top: значення;
padding-right: значення;
padding-bottom: значення;
padding-left: значення;
*/

/* Логічні властивості */

/* Задає однакові логічні блочні відступи на початку та вкінці */
/* padding-block: ; */
/* Задає однакові логічні рядкові відступи зліва та справа */
/* padding-inline: ; */

/* padding-block: 20px; */
/* = */
/* padding: 20px 0px; */
/* або */
/* padding: 20px 0px 20px 0px; */
/* або */
/* padding-top: 20px; */
/* padding-bottom: 20px; */

/* Різні значення  */
/* padding-block: 10px 50px; */

/* padding-inline: 20px; */
/* = */
/* padding: 0px 20px; */
/* або */
/* padding: 0px 20px 0px 20px; */
/* або */
/* padding-left: 20px; */
/* padding-right: 20px; */

/* Різні значення  */
/* padding-inline: 10px 50px; */

/* 
	Властивості для задання 
	відступів конкретній стороні 
	*/

/* 
	Задає внутрішній логічний блочний
	відступ на початку елменту 
	*/
/* padding-block-start: 20px; */

/* 
	Задає внутрішній логічний блочний 
	відступ в кінці елменту 
	*/
/* padding-block-end: 30px; */

/* 
	Задає внутрішній логічний рядковий
	відступ на початку елменту 
	*/
/* padding-inline-start: 50px; */
/* 
	Задає внутрішній логічний рядковий 
	відступ в кінці елменту 
	*/
/* padding-inline-end: 80px; */

/* padding-inline-start: 50px; */

/* Різниця між заданням відступів */
/*
	padding-left: 50px;
	writing-mode: vertical-rl;
	*/
/*
	padding-inline-start: 50px;
	writing-mode: vertical-rl;
*/

.block {
	/* padding: 20px; */
	/* padding: 20px 50px; */
	/* padding: 20px 50px 30px; */
	/* padding: 15px 30px 10px 50px; */

	/*
	padding-top: 15px;
	padding-right: 30px;
	padding-bottom: 10px;
	padding-left: 50px;
	*/

	/* 
		Використовуємо, коли маємо 
		відступ лише з однієї сторони 
	*/
	/* padding-left: 20px; */

	/* Приклад у % */
	/*
	padding-left: 20%;
	padding-top: 20%;
	*/
}

.inline {
	/*
	padding-left: 50px;
	padding-right: 50px;
	*/
	/*
	padding-top: 50px;
	padding-bottom: 20px;*/
}

.inline-block {
	/* padding: 20px; */
}

/*
margin - Зовнішній відступ.
Відступи ЗОВНІ об'єкту до інших об'єктів. 
НЕ успадковується

Особливості:
- Значення можуть бути від'ємними!
- Спрацьовує ефект "схлопування" 
	(накладання, колапс, згортання)

margin: з_усіх_сторін;
margin: зверху_знизу зправа_зліва;
margin: зверху зправа_зліва знизу;
margin: зверху зправа знизу зліва;

margin-top: значення;
margin-right: значення;
margin-bottom: значення;
margin-left: значення;
*/

/*  логічні властивості */

/* Задає однакові логічні блочні відступи на початку та вкінці */
/* margin-block: ; */
/* Задає однакові логічні рядкові відступи зліва та справа */
/* margin-inline: ; */

/* margin-block: 20px; */
/* = */
/* margin: 20px 0px; */
/* або */
/* margin: 20px 0px 20px 0px; */
/* або */
/* margin-top: 20px; */
/* margin-bottom: 20px; */

/* Різні значення  */
/* margin-block: 10px 50px; */

/* margin-inline: 20px; */
/* = */
/* margin: 0px 20px; */
/* або */
/* margin: 0px 20px 0px 20px; */
/* або */
/* margin-left: 20px; */
/* margin-right: 20px; */

/* Різні значення  */
/* margin-inline: 10px 50px; */

/* 
	Властивості для задання 
	відступів конкретній стороні 
	*/

/* 
	Задає завнішній логічний блочний
	відступ на початку елменту 
	*/
/* margin-block-start: 20px; */

/* 
	Задає завнішній логічний блочний 
	відступ в кінці елменту 
	*/
/* margin-block-end: 30px; */

/* 
	Задає завнішній логічний рядковий
	відступ на початку елменту 
	*/
/* margin-inline-start: 50px; */
/* 
	Задає завнішній логічний рядковий 
	відступ в кінці елменту 
	*/
/* margin-inline-end: 80px; */

/* margin-inline-start: 50px; */

/* Різниця між заданням відступів */
/*
	margin-left: 50px;
	writing-mode: vertical-rl;
	*/
/*
	margin-inline-start: 50px;
	writing-mode: vertical-rl;
	*/

.block {
	/* margin: 50px; */
	/* margin-top: -20px; */
	/* margin-left: -50px; */

	/* Приклад у % */
	/* margin: 20%; */
}

/*
Ефект "схлопування" 
(накладання, колапс, згортання) margin.
Виникає коли зовнішній відступ 
заданий сусіднім об'єктам.

Значання відступу буде дорівнювати 
найбільшому з 2х значеннь.
Відступ margin прийнято задавати з ліва направо
та зверху вниз
*/
/*
.block {
	margin-bottom: 50px;
}
.block-2 {
	background-color: #794f45;
	margin-bottom: 20px;
}
*/
.inline {
	/*
	margin-top: 50px;
	margin-bottom: 50px; 
	margin-left: 50px;
	margin-right: 50px;
	*/
}
.inline-block {
	/*
	margin-top: 10px;
	margin-bottom: 50px;
	margin-left: 20px;
	margin-right: 50px;
	*/
}

/* 
	!!!!!!!!!!
	Для того, щоб вдало застосовати той чи інший відступ
	проговорюємо вголос:
	1) який тип відступу треба (внутрішній чи зовнішній)?
	2) для якого об'єкту треба задати відступ?
*/

.block {
	/* padding: 20px; */
	/* Відступ саме між об'єктом .block та оточенням */
	/* margin-bottom: 50px; */
}
.block p {
	/* padding: 15px; */
	/* Відступ саме між об'єктами p та оточенням */
	/* margin-bottom: 30px; */
}

/*
	width - чітко задає ширину блочного (блочно-рядкового) 
	об'єкту.
	НЕ працює зі рядковими об'єктами
	width: значення;
	auto - (за замовченням) автоматичний розмір
	НЕ успадковується
*/
/*
	max-width 
	Встановлює максимальну ширину 
	блочних (блочно-рядкових) тегів 
	Властивість не успадковується 
	НЕ працює зі рядковими об'єктами
*/
/*
	min-width 
	Встановлює мінімальну ширину 
	блочних (блочно-рядкових) тегів 
	Властивість не успадковується 
	НЕ працює зі рядковими об'єктами
*/

/* 
	Значення у %
	% береться від ширини батьківського об'єкту
*/
/*
.block {
	width: 150px;
}
*/
/*
.inline {
	width: 100000050px;
}
	*/

.inline-block {
	width: 200px;
}

.block {
	/*
	max-width: 600px;
	min-width: 300px;
	*/
	/* width: 50%; */

	/* margin-left: 50px; */
	/* width: auto; */
	/* width: 100%; */
}

/*
height 
Встановлює чітку висоту блочних (блочно-рядкових) тегів 
Властивість не успадковується 
НЕ працює зі рядковими об'єктами

min-height 
Встановлює мінімальну висоту 
блочних (блочно-рядкових) тегів 
Властивість не успадковується 
НЕ працює зі рядковими об'єктами

max-height 
Встановлює максимальну 
висоту блочних (блочно-рядкових) тегів 
Властивість не успадковується 
НЕ працює зі рядковими об'єктами
*/

.block {
	/* height: 200px; */
	/* max-height: 50px; */
	/* min-height: 100px; */
}

/* логічний властивості */

/* Задає логічний рядкорий розмір об'єкту */
/* inline-size: ; */
/* Задає логічний блочний розмір об'єкту */
/* block-size: ; */

/*
	inline-size: 200px;
	block-size: 150px;

	мінімальні та максимальні обмеження

	max-inline-size
	max-block-size

	min-inline-size
	min-block-sizes
	*/

.block {
	/*
	width: 300px;
	writing-mode: vertical-rl;
	*/

	/*
	inline-size: 300px;
	writing-mode: vertical-rl;
	*/
}

/*
box-sizing
Застосовується для зміни алгоритму обчислення величин
content-box - (за замовченням) додає відступи
до розміру об'єкту
border-box - значення розмірів враховують відступи
*/
/*
.block {
	border-left: 10px solid #000;
	margin-left: 50px;
	padding-left: 50px;
	width: 300px;
}
*/
/*
	overflow 
	Керує відображенням контенту блочного елементу
	Властивість не успадковується
	visible - (за замовченням) Відображається усесь 
	контент елемента, навіть за межами встановлених розмірів
	hidden - Відображається тільки контент всередені елемента,
	clip - Майже теж саме що й hidden.
	все інше буде сховано
	scroll - Завжди додаються смужки прокрутки
	auto - Смужки прокрутки додаються лише за необхідністю

	Тільки вертикаль
	overflow-y: ; 
	Тільки горизонталь
	overflow-x: ;
*/
.block {
	/* white-space: nowrap; */
	/* height: 50px; */
	/* overflow: scroll; */
	/* overflow: clip; */
	/* overflow: hidden; */
	/* overflow: auto; */
}

/*
vertical-align - Визначає вертикальне верівнювання 
блочно-рядкових або блочно-рядкових + рядкових об'єктів.
top
middle
bottom
*/

.inline-block {
	/* vertical-align: bottom; */
}

/*
	display
	Багатоцільова властивість яка задає 
	глобальні параметри тега. 
	Властивість не успадковується
	block - (за замовченням для блочних об'ектів) 
	Елемент відображається як блочний.
	inline - (за замовченням для рядкових об'ектів)  
	Елемент відображається як рядковий.
	inline-block - (блочно-рядковий) 
	Елемент відображається як 
	рядковий але з можливістю 
	використання усіх CSS-властивостей.
	none - Елемент не виводиться в браузер. 
	Інші елементи займають його місце.
	Не приймає участь у обробці браузером.
*/

.block {
	/* display: block; (за замовченням) */
}
.inline {
	/* display: inline; (за замовченням) */
}
.inline-block {
	/* display: inline-block; (за замовченням) */
	/* display: block; */
	/* 
	Нічого не змінює 
	display: inline;
	*/
}

/* Центрування блоку */
/*
1) Об'єкт має бути блочним
2) Об'єкт має мати меньшу ширину
	за батьківський елемент
3) Додаємо margin: 0 auto;
*/

.block {
	/* text-align: center; */
	/* max-width: 400px; */
	/* margin: 0 auto; */
	/* або (логічна властивіть) */
	/* margin-inline: auto; */
}

.section {
	max-width: 500px;
	margin: 0 auto;
	overflow: hidden;
	background-color: #794f45;
}
.items {
	margin-left: -5px;
	margin-right: -5px;
	font-size: 0;
}
.item {
	width: 33.333%;
	display: inline-block;
	margin-bottom: 10px;
	padding-left: 5px;
	padding-right: 5px;
	vertical-align: top;
}
.content {
	font-size: 18px;
	background-color: #7a956b;
	text-align: center;
	padding: 25px;
}
